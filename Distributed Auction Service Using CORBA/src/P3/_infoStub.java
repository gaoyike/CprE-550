package P3;


/**
* P3/_infoStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from auction.idl
* Tuesday, March 31, 2015 2:36:44 PM CDT
*/

public class _infoStub extends org.omg.CORBA.portable.ObjectImpl implements P3.info
{

  public void view_item (String username, org.omg.CORBA.StringHolder c)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("view_item", true);
                $out.write_string (username);
                $in = _invoke ($out);
                c.value = $in.read_string ();
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                view_item (username, c        );
            } finally {
                _releaseReply ($in);
            }
  } // view_item

  public void sell (String username, String itemname, int price, org.omg.CORBA.StringHolder c)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("sell", true);
                $out.write_string (username);
                $out.write_string (itemname);
                $out.write_long (price);
                $in = _invoke ($out);
                c.value = $in.read_string ();
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                sell (username, itemname, price, c        );
            } finally {
                _releaseReply ($in);
            }
  } // sell

  public void bid (String username, int price, org.omg.CORBA.StringHolder c)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("bid", true);
                $out.write_string (username);
                $out.write_long (price);
                $in = _invoke ($out);
                c.value = $in.read_string ();
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                bid (username, price, c        );
            } finally {
                _releaseReply ($in);
            }
  } // bid

  public void view_high_bidder (String username, org.omg.CORBA.StringHolder name, org.omg.CORBA.StringHolder c)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("view_high_bidder", true);
                $out.write_string (username);
                $in = _invoke ($out);
                name.value = $in.read_string ();
                c.value = $in.read_string ();
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                view_high_bidder (username, name, c        );
            } finally {
                _releaseReply ($in);
            }
  } // view_high_bidder

  public void done (String username, org.omg.CORBA.StringHolder output)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("done", true);
                $out.write_string (username);
                $in = _invoke ($out);
                output.value = $in.read_string ();
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                done (username, output        );
            } finally {
                _releaseReply ($in);
            }
  } // done

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:P3/info:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _infoStub
